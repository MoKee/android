MoKee OpenSource
===========

Submitting Patches
------------------
Patches are always welcomed!  Please submit your patches via MoKee Gerrit! You can do this by using these commands:

    (From root android directory)
    . build/envsetup.sh
    (Go to repo you are patching, make your changes and commit)
    mkgerrit <for(new)/changes(patch set)> <branch/change-id> 

    repo start jb-mr1_mkt .
    (Make your changes and commit)
    repo upload .

*Note: "." means current directory*

For more help on using repo, use this command: 

    repo help upload

Make your changes and commit with a detailed message, starting with what you are working with (i.e. vision: Update Kernel).

Commit your patches in a single commit. Squash multiple commits using this command:     

    git rebase -i HEAD~<# of commits>

To view the status of your and others' patches, visit [MoKee Code Review](http://review.mfunz.com/)


Getting Started
---------------

To get started with MoKee Open Source, you will need to get
familiar with [Repo](https://source.android.com/source/using-repo.html) and [Version Control with Git](https://source.android.com/source/version-control.html).

To initialize your local repository using the MoKee trees, use a command like this:

    repo init -u https://github.com/MoKee/android.git -b jb-mr1_mkt

 or

    repo init -u ssh://[username]@review.mfunz.com:29418/MoKee/android.git -b jb-mr1_mkt

Then to sync up:

    repo sync

Start Work
----------

To work faster, we introduced a new build script to help you start compiling.

First, go to the root path of your project. We assume that your source is under 
(/mokee):

    cd /mokee
    
then feel free to use the build script:

    ./mk [Device] [Variable]
    
**Device**: your device name

**Variable**: additional operations like:

* fix - compile without any cleaning if you are doing a build fix
* clean - do 'make installclean' before compile
* sync - do 'repo sync' before compile

####Example:
Your device is maguro and if you run without any variable, it will clean up your build.prop only:

    ./mk maguro

You want to sync source before starting:

    ./mk maguro sync

Do a clean compile without deleting whole prebuilt libs:

    ./mk maguro clean

You are fixing a build and want to resume the build, it will build quicker without any cleaning up:

    ./mk maguro fix

You can also do it all at once:

    ./mk maguro sync clean
